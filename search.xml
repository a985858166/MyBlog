<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Kubernetes动态卷存储(NFS)</title>
    <url>/2021/03/24/c8ff.html</url>
    <content><![CDATA[<h2 id="安装配置nfs服务器"><a href="#安装配置nfs服务器" class="headerlink" title="安装配置nfs服务器"></a>安装配置nfs服务器</h2><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install nfs-kernel-server</span><br></pre></td></tr></table></figure>

<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/exports</span><br><span class="line"><span class="meta">#</span><span class="bash"> 目录    允许的ip地址(*为全部)   具体权限          </span></span><br><span class="line">/mnt/k8s 10.0.0.1/24(rw,sync,no_root_squash,insecure)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">重启nfs服务</span></span><br><span class="line">systemctl restart nfs-kernel-server</span><br><span class="line"><span class="meta">#</span><span class="bash">设置为开机自启</span></span><br><span class="line">systemctl enable nfs-kernel-server</span><br><span class="line"><span class="meta">#</span><span class="bash">重新挂载 无需重启</span></span><br><span class="line">exportfs -rv</span><br></pre></td></tr></table></figure>

<h4 id="配置说明"><a href="#配置说明" class="headerlink" title="配置说明"></a>配置说明</h4><p>​    <code>ro</code>：默认选项，以只读的方式共享。</p>
<p>​    <code>rw</code>：以读写的方式共享。</p>
<p>​    <code>root_squash</code>：将客户端使用的是root用户时，则映射到NFS服务器的用户为NFS的匿名用户（nfsnobody）。</p>
<p>​    <code>no_root_squash</code>：将客户端使用的是root用户时，则映射到FNS服务器的用户依然为root用户。</p>
<p>​    <code>all_squash</code>：默认选项，将所有访问NFS服务器的客户端的用户都映射为匿名用户，不管客户端使用的是什么用户。</p>
<p>​    <code>anonuid</code>：设置映射到本地的匿名用户的UID</p>
<p>   <code>anongid</code>：设置映射到本地的匿名用户的GID</p>
<p>​    <code>sync</code>：默认选项，保持数据同步，数据同步写入到内存和硬盘。</p>
<p>​    <code>async</code>：异步，先将数据写入到内存，在将数据写入到硬盘。</p>
<p>​    <code>secure</code>：NFS客户端必须使用NFS保留端口（通常是1024以下的端口），默认选项。</p>
<p>​    <code>insecure</code>：允许NFS客户端不使用NFS保留端口（通常是1024以上的端口）。</p>
<h2 id="安装配置nfs客户端"><a href="#安装配置nfs客户端" class="headerlink" title="安装配置nfs客户端"></a>安装配置nfs客户端</h2><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#所有k8s节点安装nfs客户端</span><br><span class="line">apt-get install nfs-common</span><br></pre></td></tr></table></figure>

<h4 id="挂载测试"><a href="#挂载测试" class="headerlink" title="挂载测试"></a>挂载测试</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">新建需要挂载的目录   </span></span><br><span class="line">mkdir /test</span><br><span class="line"><span class="meta">#</span><span class="bash">挂载</span></span><br><span class="line"><span class="meta">#</span><span class="bash">mount -t nfs 服务端ip:共享目录 挂载目录</span></span><br><span class="line">mount -t nfs 10.0.1.1:/mnt/k8s /test</span><br><span class="line"><span class="meta">#</span><span class="bash">无任何回显 为成功</span></span><br><span class="line"><span class="meta">#</span><span class="bash">卸载</span></span><br><span class="line">umount /test</span><br></pre></td></tr></table></figure>



<h2 id="Kubernetes安装nfs-client-provisioner"><a href="#Kubernetes安装nfs-client-provisioner" class="headerlink" title="Kubernetes安装nfs-client-provisioner"></a>Kubernetes安装nfs-client-provisioner</h2><h4 id="配置脚本"><a href="#配置脚本" class="headerlink" title="配置脚本"></a>配置脚本</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#rbac.yaml  权限</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["persistentvolumes"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"delete"</span><span class="string">]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["persistentvolumeclaims"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">["storage.k8s.io"]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["storageclasses"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">]</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["events"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["create",</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">run-nfs-client-provisioner</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner-runner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="string">["endpoints"]</span></span><br><span class="line">    <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"list"</span><span class="string">,</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"create"</span><span class="string">,</span> <span class="string">"update"</span><span class="string">,</span> <span class="string">"patch"</span><span class="string">]</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">leader-locking-nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#deployment.yaml  nfs-client-provisioner  具体部署</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-provisioner</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">gmoney23/nfs-client-provisioner:latest</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/persistentvolumes</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">PROVISIONER_NAME</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">nfs-server</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_SERVER</span></span><br><span class="line">              <span class="attr">value:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">NFS_PATH</span></span><br><span class="line">              <span class="attr">value:</span> <span class="string">/mnt/k8s</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nfs-client-root</span></span><br><span class="line">          <span class="attr">nfs:</span></span><br><span class="line">            <span class="attr">server:</span> <span class="number">10.0</span><span class="number">.0</span><span class="number">.100</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/mnt/k8s</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#storage-class.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">storage.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StorageClass</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">managed-nfs-storage</span></span><br><span class="line"><span class="attr">provisioner:</span> <span class="string">nfs-server</span> <span class="comment"># or choose another name, must match deployment's env PROVISIONER_NAME'</span></span><br><span class="line"><span class="attr">parameters:</span></span><br><span class="line">  <span class="attr">archiveOnDelete:</span> <span class="string">"false"</span></span><br></pre></td></tr></table></figure>

<h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><p>按顺序执行以上脚本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -f xxxx.yaml</span><br></pre></td></tr></table></figure>

<h4 id="设置默认的StorageClass"><a href="#设置默认的StorageClass" class="headerlink" title="设置默认的StorageClass"></a>设置默认的StorageClass</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">执行  managed-nfs-storage替换为要设置storageclass的名称</span></span><br><span class="line">kubectl patch storageclass managed-nfs-storage -p '&#123;"metadata": &#123;"annotations":&#123;"storageclass.kubernetes.io/is-default-class":"true"&#125;&#125;&#125;'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看StorageClass</span></span><br><span class="line">root@master:~# kubectl get sc</span><br><span class="line">NAME                            PROVISIONER                    RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE</span><br><span class="line">local-storage                   kubernetes.io/no-provisioner   Delete          WaitForFirstConsumer   false                  4d1h</span><br><span class="line">managed-nfs-storage (default)   nfs-server                     Delete          Immediate              false                  3m43s</span><br></pre></td></tr></table></figure>

<h4 id="测试pvc"><a href="#测试pvc" class="headerlink" title="测试pvc"></a>测试pvc</h4><h5 id="新建脚本"><a href="#新建脚本" class="headerlink" title="新建脚本"></a>新建脚本</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#test-pvc.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">test-pvc</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">test-pvc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line">  <span class="comment">#StorageClass名称，使用默认的可不填</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">managed-nfs-storage</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">"10Gi"</span></span><br></pre></td></tr></table></figure>

<h5 id="执行以上脚本"><a href="#执行以上脚本" class="headerlink" title="执行以上脚本"></a>执行以上脚本</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -f test-pvc.yaml</span><br></pre></td></tr></table></figure>

<h5 id="查看pvc"><a href="#查看pvc" class="headerlink" title="查看pvc"></a>查看pvc</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@master:~# kubectl get pvc</span><br><span class="line">NAME                    STATUS   VOLUME                                     CAPACITY   ACCESS MODES   STORAGECLASS          AGE</span><br><span class="line">master-blog-local-pvc   Bound    master-blog-local-pv                       5Gi        RWO            local-storage         23h</span><br><span class="line">test-pvc                Bound    pvc-f75a80e1-4d0d-4871-8d20-afc917309bed   10Gi       RWO            managed-nfs-storage   2m1s</span><br></pre></td></tr></table></figure>

<h5 id="删除test-pvc"><a href="#删除test-pvc" class="headerlink" title="删除test-pvc"></a>删除test-pvc</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl delete pvc test-pvc</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>kubernetes</category>
      </categories>
      <tags>
        <tag>k8s</tag>
        <tag>kubernetes</tag>
        <tag>nfs</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis缓存雪崩</title>
    <url>/2020/03/10/a6f9.html</url>
    <content><![CDATA[<ol>
<li><h2 id="什么是缓存雪崩"><a href="#什么是缓存雪崩" class="headerlink" title="什么是缓存雪崩"></a>什么是缓存雪崩</h2></li>
</ol>
<p>缓存实际上是起到保护数据库的作用，它有利于数据库承受到大量的查询请求，从而起到保护数据库的作用。</p>
<p>如果某种原因缓存出现故障，那么当一定时间访问量达到一定程度时数据库可能出出现无法承受巨大的访问请求，而发生崩溃，这就是缓存雪崩。</p>
<ol start="2">
<li><h2 id="如何避免"><a href="#如何避免" class="headerlink" title="如何避免"></a>如何避免</h2><ol>
<li><p><strong>高可用</strong></p>
<p>可通过集群的方式来保证缓存的可用性。</p>
</li>
<li><p><strong>熔断器</strong></p>
<p>可以使用类似 <a href="https://github.com/Netflix/Hystrix" target="_blank" rel="noopener">Hystrix</a>的开源工具来防止雪崩，<code>降级(downgrade)</code>和<code>限流(current limit)</code>来防止雪崩后数据库的崩溃。</p>
</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>面试题</category>
      </categories>
      <tags>
        <tag>redis</tag>
        <tag>缓存</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基础 枚举(Enum)</title>
    <url>/2020/03/08/a696.html</url>
    <content><![CDATA[<ol>
<li><h2 id="枚举的应用场景"><a href="#枚举的应用场景" class="headerlink" title="枚举的应用场景"></a>枚举的应用场景</h2></li>
</ol>
<ul>
<li>作为普通的常量使用，如 星期、季节、颜色、城市 等等；通常配合 <code>switch</code> 语句使用。 </li>
<li>往枚举中添加变量、构造函数、以达到灵活获取指定值的目的。 </li>
<li>通常用于一些业务系统中定义一些固定值，如用于匹配数据库中的字段值等。在平时数据库表的设计中，我们一般以数字来代表一些常量，那么在 <code>java</code> 中就可以通过枚举来将数据库字段的数值和所代表的常量对应起来。 </li>
<li>往枚举中添加自己特定方法，以实现自己所需的相关业务逻辑。比如：可以通过状态码获得对应的状态码信息。 </li>
<li>利用枚举实例创建是线程安全的特性实现单例模式。</li>
</ul>
<ol start="2">
<li><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2></li>
</ol>
<p><strong>枚举</strong>(<code>enum</code>全称为<code>enumeration</code>)类型是Java5新增的类型，放在<code>java.lang</code>包中，允许用常量来表示特点的数据判断，而且全部都以类型安全的形式来表示。</p>
<ol start="3">
<li><h2 id="要点"><a href="#要点" class="headerlink" title="要点"></a>要点</h2></li>
</ol>
<ul>
<li>需要的数据不能是任意的，而任意是一定范围内的值</li>
<li>枚举类也是一个特殊的类，构造默认的修饰符是<code>private</code>的</li>
<li>枚举值默认的修饰符是<code>public static final</code>，必须要位于枚举类的第一个语句</li>
<li>枚举类可以定义自己的成员变量、成员函数和带参构造方法，自定义带参构造方法时，枚举值需要传参</li>
<li>枚举类可以在抽象的方法，但是枚举值必须要实现抽象的方法</li>
<li>可以使用<code>==</code>来比较枚举实例</li>
</ul>
<ol start="4">
<li><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2></li>
</ol>
<p>枚举中的一些常用方法如下</p>
<ul>
<li><code>int ordinal()</code>：返回枚举常量的序数（它在枚举声明中的位置，其中初始常量序数为零）。</li>
<li><code>String name()</code>：返回此枚举常量的名称。</li>
<li><code>String toString()</code>：返回覆盖枚举常量的<code>toString()</code>方法的值。</li>
<li><code>int compareTo(E o)</code>：比较此枚举与指定对象的顺序。</li>
<li><code>Class getDeclaringClass()</code>：返回与此枚举常量的枚举类型相对应的 Class 对象。 </li>
<li><code>static &lt;T extends Enum&lt;T&gt;&gt; T valueOf(Class enumType, String name)</code>：返回指定名称的枚举对象。如：<code>ColorEnum color = ColorEnum.valueOf(&quot;RED&quot;);</code> (动态获取类型时常用)。 </li>
<li><code>T[] values()</code>:  方法将枚举所有元素<code>item</code>转换成一个数组 。</li>
</ul>
<ol start="5">
<li><h2 id="枚举自定义属性、方法和多态的使用"><a href="#枚举自定义属性、方法和多态的使用" class="headerlink" title="枚举自定义属性、方法和多态的使用"></a>枚举自定义属性、方法和多态的使用</h2></li>
</ol>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> ColorEnum &#123;</span><br><span class="line">    <span class="comment">//所有枚举实例都需要实现该方法</span></span><br><span class="line">    RED(<span class="number">1</span>,<span class="string">"红色"</span>)&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"我是红色"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, GREEN(<span class="number">2</span>,<span class="string">"绿色"</span>)&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"我是绿色"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, BLUE(<span class="number">3</span>,<span class="string">"蓝色"</span>)&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"我是蓝色"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"><span class="comment">//    自定义抽象方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//自定义属性</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> code;</span><br><span class="line">    <span class="comment">//自定义属性</span></span><br><span class="line">    <span class="meta">@Getter</span></span><br><span class="line">    <span class="meta">@Setter</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    ColorEnum(<span class="keyword">int</span> code, String name)&#123;</span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 自定义方法</span></span><br><span class="line"><span class="comment">     * 根据代码获取颜色名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getNameByCode</span><span class="params">(<span class="keyword">int</span> code)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (ColorEnum color: ColorEnum.values()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (color.code == code) &#123;</span><br><span class="line">                <span class="keyword">return</span> color.name;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="6">
<li><h2 id="枚举集合"><a href="#枚举集合" class="headerlink" title="枚举集合"></a>枚举集合</h2></li>
</ol>
<p>Java提供了两种枚举集合类，分别是<code>java.util.EnumSet</code> 和 <code>java.util.EnumMap</code>。<code>EnumMap</code>中的<code>key</code>是<code>enum</code>类型且不能为<code>null</code>，而<code>value</code>可以为任意类型。<code>EnumSet</code>不允许集合重复</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ColorEnumTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        EnumMap&lt;ColorEnum,String&gt; enumMap = <span class="keyword">new</span> EnumMap&lt;ColorEnum, String&gt;(ColorEnum<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        enumMap.put(ColorEnum.RED,<span class="string">"红色"</span>);</span><br><span class="line">        enumMap.put(ColorEnum.BLUE,<span class="string">"蓝色"</span>);</span><br><span class="line">        enumMap.put(ColorEnum.GREEN,<span class="string">"绿色"</span>);</span><br><span class="line">        System.out.println(enumMap.get(ColorEnum.BLUE));</span><br><span class="line"></span><br><span class="line">        EnumSet&lt;ColorEnum&gt; enumSet = EnumSet.noneOf(ColorEnum<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        enumSet.add(ColorEnum.RED);</span><br><span class="line">        enumSet.add(ColorEnum.RED);</span><br><span class="line">        System.out.println(enumSet.size());<span class="comment">//输出 1</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol start="7">
<li><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2></li>
</ol>
<ul>
<li>枚举类也是一个特殊的类，构造方法默认的修饰符是<code>private</code>（不管写不写）的，它们都可以定义一些属性和方法，但是不能使用<code>extends</code>关键字继承其他类，因为<code>enum</code>已经继承了<code>java.lang.Enum</code>（java是单一继承）。 </li>
<li>枚举类中可以定义抽象方法，也可以实现一个或者多个接口。 </li>
<li>使用枚举大大加强了程序的可读性、易用性和可维护性，并且可在此基础之上进行了扩展，使之可以像类一样去使用，更是为 Java 对离散量的表示上升了一个台阶。 </li>
<li>枚举最大的缺点是：<strong>相对于普通的常量会占用更多的内存</strong>。所以，我还是不建议大面积的使用枚举来替代整形常量。但是如果这些常量还有关联属性或者行为等，那么强烈推荐使用枚举类型。<strong>使用枚举类型的性能几乎是使用静态类的16倍</strong>。 </li>
<li>枚举类型对象之间的值比较，可以使用<code>==</code>直接来比较值是否相等的，不是必须使用<code>equals</code>方法。 </li>
<li>推荐使用<strong>枚举单例</strong>来实现单例模式，可以使用<strong>枚举策略</strong>来简化策略模式。 (Effective Java 该书有示例 )</li>
</ul>
]]></content>
      <categories>
        <category>Java基础</category>
      </categories>
      <tags>
        <tag>java基础</tag>
        <tag>枚举</tag>
      </tags>
  </entry>
</search>
